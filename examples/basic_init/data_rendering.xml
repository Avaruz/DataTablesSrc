<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ajax" order="2">

<css lib="datatables" />
<css lib="world-flags-sprite" />
<js lib="jquery" />
<js lib="datatables" />

<title>Data rendering</title>
<js><![CDATA[
$(document).ready(function() {
	$('#example').DataTable({
	"ajax": "../ajax/data/objects_salary.txt",
		"columns": [
			{
				"data": "name"
			},
			{
				"data": "position"
			},
			{
				"className": 'f32',
				"data": 'office',
				"render": function(data, type) {
					if (type === 'display') {
						var country = '';
						switch (data) {
							case 'Argentina':
								country = 'ar';
								break;
							case 'Edinburgh':
								country = '_Scotland';
								break;
							case 'London':
								country = '_England';
								break;
							case 'New York':
								country = 'us';
								break;
							case 'San Francisco':
								country = 'us';
								break;
							case 'Sydney':
								country = 'au';
								break;
							case 'Tokyo':
								country = 'jp';
								break;
						}

						return '<span class="flag ' + country + '"></span> ' + data;
					}

					return data;
				}
			},
			{
				"title": 'Progress',
				"data": 'extn',
				"render": function(data, type, row, meta) {
					if (type === 'display') {
						return '<progress value="' + data + '" max="9999"></progress>'; //render link in cell
					}

					return data;
				}
			},
			{
				"data": "start_date"
			},
			{
				"data": "salary"
			}

		]
	});
});
]]></js>


<info><![CDATA[

Data within DataTables can be easily rendered to add graphics or colour to your tables, as demonstrated in the example on this page.

]]></info>

</dt-example>
